Team 1:
-0.5 for pre-cond, user ID is str type, not int type

Team 1:
-1 should use tab \t to line up the columns

Team 2:
-0.5 missing types of pre-cond: patient number (str), 3 temperatures (floats)

Team 2, Team 1, Team 5:
-2 missing design comments for the diagnosis if/elif/else statements

Team 2:
-6 missing made-up test case

Team 2:
-6 program failed to pass all test cases except for the no patient test case

Team 2:
-1 your PT_list is a dictionary, not a list
also, you only need to initialize the PT_list = [], fever = 0, chilled = 0, all the other initializations were redundant

Team 2:
-2 the temperatures should be cast as floats instead of ints

Team 2:
-6 incorrect implementation of list
+ the name is the first element in your <element> list, thus, should be element[0] instead of element[i]
+ PT_list[i] = (element[i], average) is not a valid syntax even when you initialized it as a dict
+ Here is a way to add a new element to a 2-D list:
PT_list = []
PT_list.append([element[0], average])

Team 2, Team 5:
-2 instead of using a counter for the number of patients, using len(PT_list) should give you that number

Team 2:
-1 you only need to check once if there were more than 0 patients processed (len(PT_list) > 0) then do the percentage calculations and print them out in the same if statement

Team 2, Team 5:
-1 incorrect method of accessing list elements
Team 2:
+ you are using "for num in PT_list" which means num will be each of the elements in your list, so the way you access average is num[1]
+ if you want to use indexing "PT_list[num][1]", your for loop should be: "for num in range(len(PT_list))", then num will be the number from 0 to len(PT_list) - 1
Team 5:
+ append() is used to add elements to the list, if you want to access an already existing element inside a list, just do total_list[index]

Team 2:
-1 you do not need to keep track of regular patients

Team 2, Team 5:
Please come see me during my office hours (or any other TAs or Dr. Eby) or reach out to me via email if you still have questions about this lab. Make sure to understand how to complete this lab correctly as it is very similar to the upcoming Lab Test 2.

Team 3:
-12 missing design comments

Team 3, Team 5:
-1 failed to handle edge cases (eg: 99999 , 98.701 , 98.701 , 98.701) due to previous round off when appending average to list, you should only format to 2 decimals in the print statement and leave the average in the list as the calculated floats

Team 3:
-3 incorrect percentage outputs

Team 3:
-2 incorrect calculations, should use len(final) instead of f here

Team 3, Team 4:
-0.5 for pre-cond, temperatures' type should be float

Team 4:
a more efficient way to print is:
print number of patients processed
if #patients > 0:
    calculate percentage
    output report

Team 5:
-9 program failed to output

Team 5:
-3 you need to cast the temperatures to floats to do the calculation

Team 5:
-3 failed to split inputs correctly, here is a way to do so:
# replace commas with spaces then split data on whitespace
total_list = patient_info.replace(",", " ").split()

Team 5:
-1 should use for loop instead of while loop because it is going through a fixed number of iterations:
for i in range(len(final_num)):
or to better cooperate with your current code:
for counter in range(len(final_num)):

