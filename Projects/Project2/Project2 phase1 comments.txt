Ryleigh:
-5 wrong rolls (different seed)

Ryleigh:
(no credit) no functions were called

Ryleigh:
-1 should have used if and else statements instead of 2 if statements as there are only 2 possibilities

Ryleigh:
(no credit) function was not defined
Here is an example of play_turn function:
def play_turn(player: str, total: int, pass_count: int):
    '''
        Purpose: to do one player's turn, performing rolls or passes as player chooses
        Precondition: player name (string), player roll total (int), player's pass count (int)
        Postcondition: player roll total and player's pass count, both int, modified as needed
                if player passed, pass count reduced, if player rolled, roll total increased
    '''
    # if the players still has at least 1 pass
    if pass_count > 0:
        # ask do you want to roll or pass 
        choice = pass_or_roll(player)
        # if they choose roll, 
        if choice == 'R':
            # roll a die 
            roll = random.randint(1, 6)
            # add roll to roll total
            total += roll
            # display roll to players
            print(player, "rolled a", roll)
        # otherwise 
        else:
            # state that the player passed the roll
            print(player, "passed the roll")
            # take one from pass count
            pass_count -= 1
    # otherwise roll a die and add to total (ran out of passes)
    else:
        # roll a die
        roll = random.randint(1, 6)
        # add roll to roll total
        total += roll
        # display roll to players
        print(player, "rolled a", roll)
        
    # returns total roll, passcount
    return total, pass_count

Ryleigh:
-1 wrong random range, should be (1,6)

Ryleigh:
(no credit) function was not defined

Ryleigh:
(no credit) function was not defined
Here is an example of pass_or_roll function:
def pass_or_roll(player: str):
    '''
        Purpose: ask the player (pname) whether they want to pass the die or roll
                invalid answers are rejected until the player enters either P or R
                upper or lower case
        Precondition: the player's name (string)
        Postcondition: either P or R (string) based on player's answer (always uppercase)
    '''
    # prompt the player P or R using player's name and get the player's answer
    choice = input("Player {} (P)ass or (R)oll? ".format(player))
    # make it uppercase
    choice = choice.upper()
    # while the answer is not valid
    while choice != 'P' and choice != 'R':
        # display error message
        print("Invalid response, P or R please")
        # get the player's answer
        choice = input("Player {} (P)ass or (R)oll? ".format(player))
        # make it uppercase
        choice = choice.upper()
    
    # return the player's answer
    return choice

Jiaming:
(no credit) missing prologs and design comments