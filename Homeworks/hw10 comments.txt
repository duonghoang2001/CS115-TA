Ryleigh, Alexander, Gabe, Elliot, Cristian:
-8 sentinel logic was not used, an example would be:
.content = input("Enter line: ")
.while content != '':
.    # process the string here
.    content = input("Enter line: ")

Ryleigh:
no split was used, instead of checking each space to count words, do: words = content.split() would return a list of words separated by whitespace

Ryleigh:
-4 you should just split the content into words, then use len(word) to count the number of characters contain in that word
also, you should not use 'continue'

Ryleigh, Alexander, Jiaming, Aidan, Jackson, Elliot, Natalia, Jake, Cristian:
-4 design choices were not documented

Ryleigh:
the parentheses were redundant

Ryleigh, Alexander, Wanda:
-30 you must NOT use 'break'

Jiaming:
-2 you should use the input itself as a condition for the while loop, then only split it if it is not an empty string, for example:
.content = input("Enter line: ")
.while content != '':
.    # process the string here
.    content = input("Enter line: ")

Jiaming, Austin:
-4 you already have the total number of word count for each input, using len(), so it is inefficient to increase the counter inside the for loop

Aidan:
-1 the test case answers should also be shown as 2 decimals

Jackson:
you should put the print statements after the if/else statement for better efficiency

Olivia, Gabe:
-2 design choice about line processing was not documented

Austin:
-2 design choice about the type of loop for word length was not documented

Austin:
-4 you already have the total number of character count for each word, using len(), so just traverse through each word and add len() of each of them